{smcl}
{* *! version 1.0.3 16oct2020}{...}
{viewerjumpto "Title" "mkduration##title"}{...}
{viewerjumpto "Syntax" "mkduration##syntax"}{...}
{viewerjumpto "Description" "mkduration##description"}{...}
{viewerjumpto "Options" "mkduration##options"}{...}
{viewerjumpto "Author" "mkduration##author"}{...}
{viewerjumpto "References" "mkduration##references"}
{viewerjumpto "Examples" "mkduration##examples"}{...}
{viewerjumpto "Version" "mkduration##version"}{...}
{cmd:help mkduration}
{hline}

{marker title}{...}
{title:Title}

{p 8 15 2}
{cmd:mkduration} {hline 2} Create duration variable for xtset data with a dichotomous event.{p_end}

{marker syntax}{...}
{title:Syntax}

{p 8 15 2}
{cmdab:mkduration}
eventvar{cmd:,} [{opt dname()} {opt force} {opt polynomial} {opt spline()} {opt nknots()}]

{synoptset 20 tabbed}{...}
{synopthdr}
{synoptline}
{p2coldent: {opt dname()}}optional name for created duration variable{p_end}
{p2coldent: {opt force}}force creation of duration over gaps in time{p_end}
{p2coldent: {opt polynomial}}generate cubic polynomial terms{p_end}
{p2coldent: {opt spline()}}generate a linear or restricted cubic spline{p_end}
{p2coldent: {opt nknots()}}specify number of knots if using spline{p_end}
{synoptline}
{p2colreset}{...}
{p 4 6 2}

{marker description}{...}
{title:Description}

{pstd}
{cmd:mkduration} generates a duration variable for duration/event history data where the data are xtset and in long format. In other words, given CSTS-style data for i units observed over t time periods, and where there is some dichotomous variable (where "1" indicates the instance of an event, and "0" indicates an absence):

            {cmd:unit}{col 20}{cmd:time}{col 27}{cmd:event}
            {hline 20}
            1     {col 20}1 {col 27} 0
            1 {col 20}2 {col 27} 0
            1 {col 20}3 {col 27} 1
            1 {col 20}4 {col 27} 0
            1 {col 20}5 {col 27} 1
            2     {col 20}1 {col 27} 0
            2 {col 20}2 {col 27} 1
            2 {col 20}3 {col 27} 0
            2 {col 20}4 {col 27} 0
            2 {col 20}5 {col 27} 0

{pstd}
{cmd:mkduration} creates a counter variable that marks the time since the last event for each unit:


            {cmd:unit}{col 20}{cmd:time}{col 27}{cmd:event}{col 34}{cmd:duration}
            {hline 29}
            1     {col 20}1 {col 27} 0 {col 34} 1
            1 {col 20}2 {col 27} 0 {col 34} 2
            1 {col 20}3 {col 27} 1 {col 34} 3
            1 {col 20}4 {col 27} 0 {col 34} 1
            1 {col 20}5 {col 27} 1 {col 34} 2
            2     {col 20}1 {col 27} 0 {col 34} 1
            2 {col 20}2 {col 27} 1 {col 34} 2
            2 {col 20}3 {col 27} 0 {col 34} 1
            2 {col 20}4 {col 27} 0 {col 34} 2
            2 {col 20}5 {col 27} 0 {col 34} 3

{pstd}
Data must be xtset to use {cmd:mkduration}, and a single dichotomous event variable must be included when running the command.

{marker options}{...}
{title:Options}

{phang}
{opt dname()} names the duration variable that will be generated by {cmd:mkduration}. By default, the duration variable is called "duration". 

{phang}
{opt force} is an option to force the creation of duration data when gaps in time are present for one or more units. By default, gaps in the series are handled by replacing the duration variable with missings until the next event. Specifying {opt force} will fill in the duration variable, assuming that no event occurred during the gap. The default duration and duration using force are shown below:

            {cmd:unit}{col 20}{cmd:time}{col 27}{cmd:event}{col 34}{cmd:duration(default)}{col 53}{cmd:duration(force)}
            {hline 55}
            1     {col 20}1 {col 27} 0 {col 40} 1 {col 58} 1
            1 {col 20}2 {col 27} 0 {col 40} 2 {col 58} 2
            1 {col 20}3 {col 27} 1 {col 40} 3 {col 58} 3
            1 {col 20}6 {col 27} 0 {col 40} . {col 58} 6
            1 {col 20}7 {col 27} 1 {col 40} . {col 58} 7
            2     {col 20}1 {col 27} 0 {col 40} 1 {col 58} 1
            2 {col 20}2 {col 27} 1 {col 40} 2 {col 58} 2
            2 {col 20}3 {col 27} 0 {col 40} 1 {col 58} 1
            2 {col 20}5 {col 27} 0 {col 40} . {col 58} 3
            2 {col 20}6 {col 27} 0 {col 40} . {col 58} 4

{phang}
{opt polynomial} is an option to automatically create duration, duration squared, and duration cubed (i.e., creates a cubic polynomial to proxy for duration dependence). The three resulting variables will be named "dname" (whatever the user selects for the duration name, or "duration" by default), "dname2" and "dname3".

{phang}
{opt spline()} is an option to create either a piecewise linear spline, by specifying {opt spline(linear)}, or a restricted cubic spline, by specifying {opt spline(cubic)}. The resulting spline variables will include a "_spl1", "_spl2" (and so on) suffix. Linear splines will be split into equal segments based on percentiles of the distribution, which can be adjusted using the number of knots. Cubic splines are also placed along the percentiles of the distribution as recommended by Harrel Jr (2015). By default, 5 knots are included.

{phang}
{opt nknots()} is an option, when creating splines, to control the number of knots included. By default, 5 knots are included, but this can range from 3 to 7. 

{marker author}{...}
{title:Author}

{pstd}
Andrew Q. Philips {break}
Department of Political Science {break}
University of Colorado Boulder {break}
andrew.philips@colorado.edu {p_end}

{marker references}{...}
{title:References}

{pstd}
Harrell Jr, Frank E. 2015. Regression modeling strategies: with applications to linear models, logistic and ordinal regression, and survival analysis. Springer.


{marker examples}{...}
{title:Examples}

{phang2}{cmd:. webuse union}{p_end}
{phang2}{cmd:. xtset}{p_end}
{phang2}{cmd:. mkduration union}{p_end}

{pstd}Forcing duration over any time gaps, renaming duration variable, and creating cubic polynomial:{p_end}
{phang2}{cmd:. mkduration union, force dname(dvar) polynomial}{p_end}

{pstd}Create linear spline with 4 knots:{p_end}
{phang2}{cmd:. mkduration union, spline(linear) nknots(4)}{p_end}

{marker version}{...}
{title:Version}
{pstd}
version 1.0.3, Feb 16, 2020.{p_end}